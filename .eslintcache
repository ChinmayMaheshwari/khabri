[{"/home/chinu/Documents/react/khabri/src/index.js":"1","/home/chinu/Documents/react/khabri/src/App.js":"2","/home/chinu/Documents/react/khabri/src/Navbar.js":"3","/home/chinu/Documents/react/khabri/src/data.js":"4","/home/chinu/Documents/react/khabri/src/Slider.js":"5","/home/chinu/Documents/react/khabri/src/SecondaryNavbar.js":"6"},{"size":432,"mtime":1610366051736,"results":"7","hashOfConfig":"8"},{"size":275,"mtime":1610383933377,"results":"9","hashOfConfig":"8"},{"size":1730,"mtime":1610383065549,"results":"10","hashOfConfig":"8"},{"size":1155,"mtime":1610343688367,"results":"11","hashOfConfig":"8"},{"size":763,"mtime":1610384736944,"results":"12","hashOfConfig":"8"},{"size":505,"mtime":1610383185763,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1lj5og9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/chinu/Documents/react/khabri/src/index.js",[],["28","29"],"/home/chinu/Documents/react/khabri/src/App.js",[],"/home/chinu/Documents/react/khabri/src/Navbar.js",["30","31"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport { links, social } from \"./data\";\nimport logo from \"./logo.svg\";\n\nconst Navbar = () => {\n  const [showLinks, setShowLinks] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n  const toggleLinks = () => {\n    setShowLinks(!showLinks);\n  };\n  useEffect(() => {\n    const linksHeight = linksRef.current.getBoundingClientRect().height;\n    if (showLinks) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [showLinks]);\n  return (\n    <nav className=\"sticky\">\n      <div className=\"nav-center\">\n        {/* <div className=\"nav-header\"> */}\n        {/* <img src={logo} className=\"logo\" alt=\"logo\" /> */}\n        <button className=\"nav-toggle\" onClick={toggleLinks}>\n          <FaBars />\n        </button>\n        {/* </div> */}\n        <div className=\"links-container\" ref={linksContainerRef}>\n          <ul className=\"links\" ref={linksRef}>\n            {links.map((link) => {\n              const { id, url, text } = link;\n              return (\n                <li key={id} onMouseOver={() => console.log(\"hi\")}>\n                  <a href={url}>{text}</a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        {/* <ul className=\"social-icons\">\n          {social.map((socialIcon) => {\n            const { id, url, icon } = socialIcon;\n            return (\n              <li key={id}>\n                <a href={url}>{icon}</a>\n              </li>\n            );\n          })}\n        </ul> */}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/home/chinu/Documents/react/khabri/src/data.js",[],"/home/chinu/Documents/react/khabri/src/Slider.js",["32","33","34"],"/home/chinu/Documents/react/khabri/src/SecondaryNavbar.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":17,"nodeType":"41","messageId":"42","endLine":3,"endColumn":23},{"ruleId":"39","severity":1,"message":"43","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":12},{"ruleId":"44","severity":1,"message":"45","line":13,"column":13,"nodeType":"46","endLine":13,"endColumn":31},{"ruleId":"44","severity":1,"message":"45","line":17,"column":13,"nodeType":"46","endLine":17,"endColumn":40},{"ruleId":"44","severity":1,"message":"45","line":21,"column":13,"nodeType":"46","endLine":21,"endColumn":40},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'social' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]